<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.muji.zh.admin.mapper.PaymentListMapper">
  <resultMap id="BaseResultMap" type="com.muji.zh.admin.model.PaymentList">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="s_id" jdbcType="INTEGER" property="sId" />
    <result column="pname" jdbcType="VARCHAR" property="pname" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="kind_name" jdbcType="VARCHAR" property="kindName" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
    <result column="grade_name" jdbcType="VARCHAR" property="gradeName" />
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="tuition" jdbcType="REAL" property="tuition" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="actual" jdbcType="REAL" property="actual" />
    <result column="area_id" jdbcType="INTEGER" property="areaId" />
    <result column="falg1" jdbcType="VARCHAR" property="falg1" />
    <result column="falg2" jdbcType="VARCHAR" property="falg2" />
    <result column="falg3" jdbcType="VARCHAR" property="falg3" />
    <result column="flag4" jdbcType="INTEGER" property="flag4" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="View_Column_List">
    id,s_id,pname,sex,kind_name,class_name,grade_name,tuition,content, create_date,actual
  </sql>

  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, s_id, pname, sex, kind_name, class_name, grade_name, end_date, create_date, tuition, 
    content, actual, area_id, falg1, falg2, falg3, flag4
  </sql>
  <select id="selectByExample" parameterType="com.muji.zh.admin.model.PaymentListExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from payment_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payment_list
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from payment_list
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.muji.zh.admin.model.PaymentListExample">
    delete from payment_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.muji.zh.admin.model.PaymentList">
    insert into payment_list (id, s_id, pname, 
      sex, kind_name, class_name, 
      grade_name, end_date, create_date, 
      tuition, content, actual, 
      area_id, falg1, falg2, 
      falg3, flag4)
    values (#{id,jdbcType=INTEGER}, #{sId,jdbcType=INTEGER}, #{pname,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{kindName,jdbcType=VARCHAR}, #{className,jdbcType=VARCHAR}, 
      #{gradeName,jdbcType=VARCHAR}, #{endDate,jdbcType=TIMESTAMP}, #{createDate,jdbcType=TIMESTAMP}, 
      #{tuition,jdbcType=REAL}, #{content,jdbcType=VARCHAR}, #{actual,jdbcType=REAL}, 
      #{areaId,jdbcType=INTEGER}, #{falg1,jdbcType=VARCHAR}, #{falg2,jdbcType=VARCHAR}, 
      #{falg3,jdbcType=VARCHAR}, #{flag4,jdbcType=INTEGER})
  </insert>

  <insert id="insertImportPayList" parameterType="com.muji.zh.admin.model.PaymentList">
    insert into payment_list (id, s_id, pname,
    sex, kind_name, class_name,
    grade_name, end_date, create_date,
    tuition, content, actual,
    area_id, falg1, falg2,
    falg3, flag4)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (
      #{item.id},#{item.s_id},#{item.pname},#{item.sex},#{item.kind_name},#{item.kind_name}
      ,#{item.class_name}
      ,#{item.grade_name}
      ,#{item.end_date}
      ,#{item.create_date}
      ,#{item.tuition}
      ,#{item.content}
      ,#{item.area_id}
      ,#{item.actual}
      )
    </foreach>


  </insert>
  <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true" parameterType="com.muji.zh.admin.model.PaymentList">
    insert into payment_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sId != null">
        s_id,
      </if>
      <if test="pname != null">
        pname,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="kindName != null">
        kind_name,
      </if>
      <if test="className != null">
        class_name,
      </if>
      <if test="gradeName != null">
        grade_name,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="tuition != null">
        tuition,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="actual != null">
        actual,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
      <if test="falg1 != null">
        falg1,
      </if>
      <if test="falg2 != null">
        falg2,
      </if>
      <if test="falg3 != null">
        falg3,
      </if>
      <if test="flag4 != null">
        flag4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sId != null">
        #{sId,jdbcType=INTEGER},
      </if>
      <if test="pname != null">
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="kindName != null">
        #{kindName,jdbcType=VARCHAR},
      </if>
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="gradeName != null">
        #{gradeName,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="tuition != null">
        #{tuition,jdbcType=REAL},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="actual != null">
        #{actual,jdbcType=REAL},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="falg1 != null">
        #{falg1,jdbcType=VARCHAR},
      </if>
      <if test="falg2 != null">
        #{falg2,jdbcType=VARCHAR},
      </if>
      <if test="falg3 != null">
        #{falg3,jdbcType=VARCHAR},
      </if>
      <if test="flag4 != null">
        #{flag4,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.muji.zh.admin.model.PaymentListExample" resultType="java.lang.Long">
    select count(*) from payment_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update payment_list
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sId != null">
        s_id = #{record.sId,jdbcType=INTEGER},
      </if>
      <if test="record.pname != null">
        pname = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.kindName != null">
        kind_name = #{record.kindName,jdbcType=VARCHAR},
      </if>
      <if test="record.className != null">
        class_name = #{record.className,jdbcType=VARCHAR},
      </if>
      <if test="record.gradeName != null">
        grade_name = #{record.gradeName,jdbcType=VARCHAR},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tuition != null">
        tuition = #{record.tuition,jdbcType=REAL},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.actual != null">
        actual = #{record.actual,jdbcType=REAL},
      </if>
      <if test="record.areaId != null">
        area_id = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.falg1 != null">
        falg1 = #{record.falg1,jdbcType=VARCHAR},
      </if>
      <if test="record.falg2 != null">
        falg2 = #{record.falg2,jdbcType=VARCHAR},
      </if>
      <if test="record.falg3 != null">
        falg3 = #{record.falg3,jdbcType=VARCHAR},
      </if>
      <if test="record.flag4 != null">
        flag4 = #{record.flag4,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update payment_list
    set id = #{record.id,jdbcType=INTEGER},
      s_id = #{record.sId,jdbcType=INTEGER},
      pname = #{record.pname,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      kind_name = #{record.kindName,jdbcType=VARCHAR},
      class_name = #{record.className,jdbcType=VARCHAR},
      grade_name = #{record.gradeName,jdbcType=VARCHAR},
      end_date = #{record.endDate,jdbcType=TIMESTAMP},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      tuition = #{record.tuition,jdbcType=REAL},
      content = #{record.content,jdbcType=VARCHAR},
      actual = #{record.actual,jdbcType=REAL},
      area_id = #{record.areaId,jdbcType=INTEGER},
      falg1 = #{record.falg1,jdbcType=VARCHAR},
      falg2 = #{record.falg2,jdbcType=VARCHAR},
      falg3 = #{record.falg3,jdbcType=VARCHAR},
      flag4 = #{record.flag4,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.muji.zh.admin.model.PaymentList">
    update payment_list
    <set>
      <if test="sId != null">
        s_id = #{sId,jdbcType=INTEGER},
      </if>
      <if test="pname != null">
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="kindName != null">
        kind_name = #{kindName,jdbcType=VARCHAR},
      </if>
      <if test="className != null">
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="gradeName != null">
        grade_name = #{gradeName,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="tuition != null">
        tuition = #{tuition,jdbcType=REAL},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="actual != null">
        actual = #{actual,jdbcType=REAL},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="falg1 != null">
        falg1 = #{falg1,jdbcType=VARCHAR},
      </if>
      <if test="falg2 != null">
        falg2 = #{falg2,jdbcType=VARCHAR},
      </if>
      <if test="falg3 != null">
        falg3 = #{falg3,jdbcType=VARCHAR},
      </if>
      <if test="flag4 != null">
        flag4 = #{flag4,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.muji.zh.admin.model.PaymentList">
    update payment_list
    set s_id = #{sId,jdbcType=INTEGER},
      pname = #{pname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      kind_name = #{kindName,jdbcType=VARCHAR},
      class_name = #{className,jdbcType=VARCHAR},
      grade_name = #{gradeName,jdbcType=VARCHAR},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      tuition = #{tuition,jdbcType=REAL},
      content = #{content,jdbcType=VARCHAR},
      actual = #{actual,jdbcType=REAL},
      area_id = #{areaId,jdbcType=INTEGER},
      falg1 = #{falg1,jdbcType=VARCHAR},
      falg2 = #{falg2,jdbcType=VARCHAR},
      falg3 = #{falg3,jdbcType=VARCHAR},
      flag4 = #{flag4,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>









  <select id="selectPartView" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="View_Column_List"/>
    from payment_list
    <where>
      and kind_name like CONCAT(CONCAT('%',#{kinderName}),'%')
    </where>
    order by create_date DESC
  </select>

  <select id="selectBypNameAndsId" resultMap="BaseResultMap">
    SELECT
    id, s_id, pname, sex,class_name,grade_name,kind_name, content, tuition, create_date,actual
    from payment_list
    <where>
      <if test="pname != null and pname != ''">
        and pname like CONCAT(CONCAT('%',#{pname}),'%')
      </if>
      <if test="sId != null and sId != ''">
        and s_id like CONCAT(CONCAT('%',#{sId}),'%')
      </if>
      <!--<if test="sId==null">-->
      <!--and 1=1-->
      <!--</if>-->
      <!--<if test="sId!=null">-->
      <!--and s_id = #{sId}-->
      <!--</if>-->
      and kind_name like CONCAT(CONCAT('%',#{kinderName}),'%')
    </where>
    order by create_date DESC
  </select>
</mapper>